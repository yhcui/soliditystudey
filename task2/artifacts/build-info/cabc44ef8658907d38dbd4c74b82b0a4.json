{
	"id": "cabc44ef8658907d38dbd4c74b82b0a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"BeggingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\ncontract BeggingContract is Ownable {\r\n\r\n    mapping(address => uint256) private _donate;\r\n\r\n    uint256 private immutable startTime;\r\n\r\n    uint256 private immutable endTime;\r\n\r\n    uint256 private constant _duration = 1;\r\n\r\n    event Donation(address indexed, uint256 value);\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        startTime = block.timestamp;\r\n        endTime = startTime + _duration *60;\r\n    }\r\n\r\n    function donate() public payable {\r\n        \r\n        require(msg.value >0, \"donate value must great than 0\");\r\n        require(block.timestamp >= startTime && block.timestamp <= endTime, \"time is not allowed\");\r\n        _donate[msg.sender] +=  msg.value;\r\n        emit Donation(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw() public onlyOwner returns(bool){\r\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n        return success;\r\n    }\r\n    function getDonation(address aa) public view returns (uint256) {\r\n        return _donate[aa];\r\n    }\r\n\r\n    receive() external payable { }\r\n    fallback() external payable { }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BeggingContract.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Donation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aa",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BeggingContract.sol\":112:1203  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"BeggingContract.sol\":397:523  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"BeggingContract.sol\":419:429  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"BeggingContract.sol\":454:469  block.timestamp */\n  timestamp\n    /* \"BeggingContract.sol\":442:469  startTime = block.timestamp */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"BeggingContract.sol\":513:515  60 */\n  0x3c\n    /* \"BeggingContract.sol\":332:333  1 */\n  0x01\n    /* \"BeggingContract.sol\":502:515  _duration *60 */\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"BeggingContract.sol\":490:499  startTime */\n  mload(0x80)\n    /* \"BeggingContract.sol\":490:515  startTime + _duration *60 */\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"BeggingContract.sol\":480:515  endTime = startTime + _duration *60 */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"BeggingContract.sol\":112:1203  contract BeggingContract is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_17:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_18:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_25\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_19:\n    /* \"#utility.yul\":328:352   */\n  tag_27\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_18\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_29\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_19\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:670   */\ntag_20:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":648:664   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:670   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":676:856   */\ntag_21:\n    /* \"#utility.yul\":724:801   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":721:722   */\n  0x00\n    /* \"#utility.yul\":714:802   */\n  mstore\n    /* \"#utility.yul\":821:825   */\n  0x11\n    /* \"#utility.yul\":818:819   */\n  0x04\n    /* \"#utility.yul\":811:826   */\n  mstore\n    /* \"#utility.yul\":845:849   */\n  0x24\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":835:850   */\n  revert\n    /* \"#utility.yul\":862:1272   */\ntag_12:\n    /* \"#utility.yul\":902:909   */\n  0x00\n    /* \"#utility.yul\":925:945   */\n  tag_33\n    /* \"#utility.yul\":943:944   */\n  dup3\n    /* \"#utility.yul\":925:945   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":920:945   */\n  swap2\n  pop\n    /* \"#utility.yul\":959:979   */\n  tag_34\n    /* \"#utility.yul\":977:978   */\n  dup4\n    /* \"#utility.yul\":959:979   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":954:979   */\n  swap3\n  pop\n    /* \"#utility.yul\":1014:1015   */\n  dup3\n    /* \"#utility.yul\":1011:1012   */\n  dup3\n    /* \"#utility.yul\":1007:1016   */\n  mul\n    /* \"#utility.yul\":1036:1066   */\n  tag_35\n    /* \"#utility.yul\":1054:1065   */\n  dup2\n    /* \"#utility.yul\":1036:1066   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1025:1066   */\n  swap2\n  pop\n    /* \"#utility.yul\":1215:1216   */\n  dup3\n    /* \"#utility.yul\":1206:1213   */\n  dup3\n    /* \"#utility.yul\":1202:1217   */\n  div\n    /* \"#utility.yul\":1199:1200   */\n  dup5\n    /* \"#utility.yul\":1196:1218   */\n  eq\n    /* \"#utility.yul\":1176:1177   */\n  dup4\n    /* \"#utility.yul\":1169:1178   */\n  iszero\n    /* \"#utility.yul\":1149:1232   */\n  or\n    /* \"#utility.yul\":1126:1265   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1245:1263   */\n  tag_37\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1126:1265   */\ntag_36:\n    /* \"#utility.yul\":910:1272   */\n  pop\n    /* \"#utility.yul\":862:1272   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1278:1469   */\ntag_14:\n    /* \"#utility.yul\":1318:1321   */\n  0x00\n    /* \"#utility.yul\":1337:1357   */\n  tag_39\n    /* \"#utility.yul\":1355:1356   */\n  dup3\n    /* \"#utility.yul\":1337:1357   */\n  tag_20\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1332:1357   */\n  swap2\n  pop\n    /* \"#utility.yul\":1371:1391   */\n  tag_40\n    /* \"#utility.yul\":1389:1390   */\n  dup4\n    /* \"#utility.yul\":1371:1391   */\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1366:1391   */\n  swap3\n  pop\n    /* \"#utility.yul\":1414:1415   */\n  dup3\n    /* \"#utility.yul\":1411:1412   */\n  dup3\n    /* \"#utility.yul\":1407:1416   */\n  add\n    /* \"#utility.yul\":1400:1416   */\n  swap1\n  pop\n    /* \"#utility.yul\":1435:1438   */\n  dup1\n    /* \"#utility.yul\":1432:1433   */\n  dup3\n    /* \"#utility.yul\":1429:1439   */\n  gt\n    /* \"#utility.yul\":1426:1462   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1442:1460   */\n  tag_42\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1426:1462   */\ntag_41:\n    /* \"#utility.yul\":1278:1469   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"BeggingContract.sol\":112:1203  contract BeggingContract is Ownable {... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe056e162080d5da78663154decfd308f0383b8d138d504e8a4cde93086ac2fef\")\n  0x00\n  assignImmutable(\"0xac8a4843910b5569f3915173c70dbcbb8947a9742ff1536cccc8b4f26cbdef89\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"BeggingContract.sol\":112:1203  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n      stop\n        /* \"BeggingContract.sol\":848:1019  function withdraw() public onlyOwner returns(bool){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BeggingContract.sol\":1025:1125  function getDonation(address aa) public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BeggingContract.sol\":531:840  function donate() public payable {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"BeggingContract.sol\":848:1019  function withdraw() public onlyOwner returns(bool){... */\n    tag_15:\n        /* \"BeggingContract.sol\":893:897  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_40:\n        /* \"BeggingContract.sol\":910:922  bool success */\n      0x00\n        /* \"BeggingContract.sol\":936:946  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":928:952  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BeggingContract.sol\":960:981  address(this).balance */\n      selfbalance\n        /* \"BeggingContract.sol\":928:986  payable(msg.sender).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_47\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_46)\n    tag_47:\n      0x60\n      swap2\n      pop\n    tag_46:\n      pop\n        /* \"BeggingContract.sol\":909:986  (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"BeggingContract.sol\":1004:1011  success */\n      dup1\n        /* \"BeggingContract.sol\":997:1011  return success */\n      swap2\n      pop\n      pop\n        /* \"BeggingContract.sol\":848:1019  function withdraw() public onlyOwner returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"BeggingContract.sol\":1025:1125  function getDonation(address aa) public view returns (uint256) {... */\n    tag_22:\n        /* \"BeggingContract.sol\":1079:1086  uint256 */\n      0x00\n        /* \"BeggingContract.sol\":1106:1113  _donate */\n      0x01\n        /* \"BeggingContract.sol\":1106:1117  _donate[aa] */\n      0x00\n        /* \"BeggingContract.sol\":1114:1116  aa */\n      dup4\n        /* \"BeggingContract.sol\":1106:1117  _donate[aa] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BeggingContract.sol\":1099:1117  return _donate[aa] */\n      swap1\n      pop\n        /* \"BeggingContract.sol\":1025:1125  function getDonation(address aa) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BeggingContract.sol\":531:840  function donate() public payable {... */\n    tag_34:\n        /* \"BeggingContract.sol\":604:605  0 */\n      0x00\n        /* \"BeggingContract.sol\":593:602  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":593:605  msg.value >0 */\n      gt\n        /* \"BeggingContract.sol\":585:640  require(msg.value >0, \"donate value must great than 0\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"BeggingContract.sol\":678:687  startTime */\n      immutable(\"0xac8a4843910b5569f3915173c70dbcbb8947a9742ff1536cccc8b4f26cbdef89\")\n        /* \"BeggingContract.sol\":659:674  block.timestamp */\n      timestamp\n        /* \"BeggingContract.sol\":659:687  block.timestamp >= startTime */\n      lt\n      iszero\n        /* \"BeggingContract.sol\":659:717  block.timestamp >= startTime && block.timestamp <= endTime */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"BeggingContract.sol\":710:717  endTime */\n      immutable(\"0xe056e162080d5da78663154decfd308f0383b8d138d504e8a4cde93086ac2fef\")\n        /* \"BeggingContract.sol\":691:706  block.timestamp */\n      timestamp\n        /* \"BeggingContract.sol\":691:717  block.timestamp <= endTime */\n      gt\n      iszero\n        /* \"BeggingContract.sol\":659:717  block.timestamp >= startTime && block.timestamp <= endTime */\n    tag_59:\n        /* \"BeggingContract.sol\":651:741  require(block.timestamp >= startTime && block.timestamp <= endTime, \"time is not allowed\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"BeggingContract.sol\":776:785  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":752:759  _donate */\n      0x01\n        /* \"BeggingContract.sol\":752:771  _donate[msg.sender] */\n      0x00\n        /* \"BeggingContract.sol\":760:770  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":752:771  _donate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"BeggingContract.sol\":752:785  _donate[msg.sender] +=  msg.value */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BeggingContract.sol\":810:820  msg.sender */\n      caller\n        /* \"BeggingContract.sol\":801:832  Donation(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e\n        /* \"BeggingContract.sol\":822:831  msg.value */\n      callvalue\n        /* \"BeggingContract.sol\":801:832  Donation(msg.sender, msg.value) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"BeggingContract.sol\":531:840  function donate() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_69\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_30\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_76\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_81:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_82:\n        /* \"#utility.yul\":184:205   */\n      tag_105\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_81\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_17:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_107\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_82\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:632   */\n    tag_84:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":614:626   */\n      revert\n        /* \"#utility.yul\":761:887   */\n    tag_86:\n        /* \"#utility.yul\":798:805   */\n      0x00\n        /* \"#utility.yul\":838:880   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":831:836   */\n      dup3\n        /* \"#utility.yul\":827:881   */\n      and\n        /* \"#utility.yul\":816:881   */\n      swap1\n      pop\n        /* \"#utility.yul\":761:887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":893:989   */\n    tag_87:\n        /* \"#utility.yul\":930:937   */\n      0x00\n        /* \"#utility.yul\":959:983   */\n      tag_113\n        /* \"#utility.yul\":977:982   */\n      dup3\n        /* \"#utility.yul\":959:983   */\n      tag_86\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":948:983   */\n      swap1\n      pop\n        /* \"#utility.yul\":893:989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":995:1117   */\n    tag_88:\n        /* \"#utility.yul\":1068:1092   */\n      tag_115\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_87\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1061:1066   */\n      dup2\n        /* \"#utility.yul\":1058:1093   */\n      eq\n        /* \"#utility.yul\":1048:1111   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1107:1108   */\n      0x00\n        /* \"#utility.yul\":1104:1105   */\n      0x00\n        /* \"#utility.yul\":1097:1109   */\n      revert\n        /* \"#utility.yul\":1048:1111   */\n    tag_116:\n        /* \"#utility.yul\":995:1117   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1262   */\n    tag_89:\n        /* \"#utility.yul\":1169:1174   */\n      0x00\n        /* \"#utility.yul\":1207:1213   */\n      dup2\n        /* \"#utility.yul\":1194:1214   */\n      calldataload\n        /* \"#utility.yul\":1185:1214   */\n      swap1\n      pop\n        /* \"#utility.yul\":1223:1256   */\n      tag_118\n        /* \"#utility.yul\":1250:1255   */\n      dup2\n        /* \"#utility.yul\":1223:1256   */\n      tag_88\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1123:1262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1597   */\n    tag_21:\n        /* \"#utility.yul\":1327:1333   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1364:1373   */\n      dup3\n        /* \"#utility.yul\":1355:1362   */\n      dup5\n        /* \"#utility.yul\":1351:1374   */\n      sub\n        /* \"#utility.yul\":1347:1379   */\n      slt\n        /* \"#utility.yul\":1344:1463   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":1382:1461   */\n      tag_121\n      tag_84\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1344:1463   */\n    tag_120:\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1527:1580   */\n      tag_122\n        /* \"#utility.yul\":1572:1579   */\n      dup5\n        /* \"#utility.yul\":1563:1569   */\n      dup3\n        /* \"#utility.yul\":1552:1561   */\n      dup6\n        /* \"#utility.yul\":1548:1570   */\n      add\n        /* \"#utility.yul\":1527:1580   */\n      tag_89\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1517:1580   */\n      swap2\n      pop\n        /* \"#utility.yul\":1473:1590   */\n      pop\n        /* \"#utility.yul\":1268:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1680   */\n    tag_90:\n        /* \"#utility.yul\":1640:1647   */\n      0x00\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1658:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_91:\n        /* \"#utility.yul\":1773:1797   */\n      tag_125\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_90\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2032   */\n    tag_24:\n        /* \"#utility.yul\":1903:1907   */\n      0x00\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"#utility.yul\":1918:1944   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2025   */\n      tag_127\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1954:2025   */\n      tag_91\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1810:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_92:\n        /* \"#utility.yul\":2125:2149   */\n      tag_129\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_87\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_32:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_131\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2537   */\n    tag_93:\n        /* \"#utility.yul\":2491:2502   */\n      0x00\n        /* \"#utility.yul\":2528:2531   */\n      dup2\n        /* \"#utility.yul\":2513:2531   */\n      swap1\n      pop\n        /* \"#utility.yul\":2390:2537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2657   */\n    tag_94:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:3061   */\n    tag_95:\n        /* \"#utility.yul\":2822:2825   */\n      0x00\n        /* \"#utility.yul\":2843:2926   */\n      tag_135\n        /* \"#utility.yul\":2924:2925   */\n      0x00\n        /* \"#utility.yul\":2919:2922   */\n      dup4\n        /* \"#utility.yul\":2843:2926   */\n      tag_93\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2836:2926   */\n      swap2\n      pop\n        /* \"#utility.yul\":2935:3028   */\n      tag_136\n        /* \"#utility.yul\":3024:3027   */\n      dup3\n        /* \"#utility.yul\":2935:3028   */\n      tag_94\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3053:3054   */\n      0x00\n        /* \"#utility.yul\":3048:3051   */\n      dup3\n        /* \"#utility.yul\":3044:3055   */\n      add\n        /* \"#utility.yul\":3037:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":2663:3061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3446   */\n    tag_44:\n        /* \"#utility.yul\":3251:3254   */\n      0x00\n        /* \"#utility.yul\":3273:3420   */\n      tag_138\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3273:3420   */\n      tag_95\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3266:3420   */\n      swap2\n      pop\n        /* \"#utility.yul\":3437:3440   */\n      dup2\n        /* \"#utility.yul\":3430:3440   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:3621   */\n    tag_96:\n        /* \"#utility.yul\":3536:3547   */\n      0x00\n        /* \"#utility.yul\":3570:3576   */\n      dup3\n        /* \"#utility.yul\":3565:3568   */\n      dup3\n        /* \"#utility.yul\":3558:3577   */\n      mstore\n        /* \"#utility.yul\":3610:3614   */\n      0x20\n        /* \"#utility.yul\":3605:3608   */\n      dup3\n        /* \"#utility.yul\":3601:3615   */\n      add\n        /* \"#utility.yul\":3586:3615   */\n      swap1\n      pop\n        /* \"#utility.yul\":3452:3621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3627:3807   */\n    tag_97:\n        /* \"#utility.yul\":3767:3799   */\n      0x646f6e6174652076616c7565206d757374206772656174207468616e20300000\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3755:3761   */\n      dup3\n        /* \"#utility.yul\":3751:3765   */\n      add\n        /* \"#utility.yul\":3744:3800   */\n      mstore\n        /* \"#utility.yul\":3627:3807   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3813:4179   */\n    tag_98:\n        /* \"#utility.yul\":3955:3958   */\n      0x00\n        /* \"#utility.yul\":3976:4043   */\n      tag_142\n        /* \"#utility.yul\":4040:4042   */\n      0x1e\n        /* \"#utility.yul\":4035:4038   */\n      dup4\n        /* \"#utility.yul\":3976:4043   */\n      tag_96\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3969:4043   */\n      swap2\n      pop\n        /* \"#utility.yul\":4052:4145   */\n      tag_143\n        /* \"#utility.yul\":4141:4144   */\n      dup3\n        /* \"#utility.yul\":4052:4145   */\n      tag_97\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4165:4168   */\n      dup3\n        /* \"#utility.yul\":4161:4173   */\n      add\n        /* \"#utility.yul\":4154:4173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3813:4179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4604   */\n    tag_58:\n        /* \"#utility.yul\":4351:4355   */\n      0x00\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4378:4387   */\n      dup3\n        /* \"#utility.yul\":4374:4392   */\n      add\n        /* \"#utility.yul\":4366:4392   */\n      swap1\n      pop\n        /* \"#utility.yul\":4438:4447   */\n      dup2\n        /* \"#utility.yul\":4432:4436   */\n      dup2\n        /* \"#utility.yul\":4428:4448   */\n      sub\n        /* \"#utility.yul\":4424:4425   */\n      0x00\n        /* \"#utility.yul\":4413:4422   */\n      dup4\n        /* \"#utility.yul\":4409:4426   */\n      add\n        /* \"#utility.yul\":4402:4449   */\n      mstore\n        /* \"#utility.yul\":4466:4597   */\n      tag_145\n        /* \"#utility.yul\":4592:4596   */\n      dup2\n        /* \"#utility.yul\":4466:4597   */\n      tag_98\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4458:4597   */\n      swap1\n      pop\n        /* \"#utility.yul\":4185:4604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4610:4779   */\n    tag_99:\n        /* \"#utility.yul\":4750:4771   */\n      0x74696d65206973206e6f7420616c6c6f77656400000000000000000000000000\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4738:4744   */\n      dup3\n        /* \"#utility.yul\":4734:4748   */\n      add\n        /* \"#utility.yul\":4727:4772   */\n      mstore\n        /* \"#utility.yul\":4610:4779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4785:5151   */\n    tag_100:\n        /* \"#utility.yul\":4927:4930   */\n      0x00\n        /* \"#utility.yul\":4948:5015   */\n      tag_148\n        /* \"#utility.yul\":5012:5014   */\n      0x13\n        /* \"#utility.yul\":5007:5010   */\n      dup4\n        /* \"#utility.yul\":4948:5015   */\n      tag_96\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4941:5015   */\n      swap2\n      pop\n        /* \"#utility.yul\":5024:5117   */\n      tag_149\n        /* \"#utility.yul\":5113:5116   */\n      dup3\n        /* \"#utility.yul\":5024:5117   */\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5142:5144   */\n      0x20\n        /* \"#utility.yul\":5137:5140   */\n      dup3\n        /* \"#utility.yul\":5133:5145   */\n      add\n        /* \"#utility.yul\":5126:5145   */\n      swap1\n      pop\n        /* \"#utility.yul\":4785:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5576   */\n    tag_62:\n        /* \"#utility.yul\":5323:5327   */\n      0x00\n        /* \"#utility.yul\":5361:5363   */\n      0x20\n        /* \"#utility.yul\":5350:5359   */\n      dup3\n        /* \"#utility.yul\":5346:5364   */\n      add\n        /* \"#utility.yul\":5338:5364   */\n      swap1\n      pop\n        /* \"#utility.yul\":5410:5419   */\n      dup2\n        /* \"#utility.yul\":5404:5408   */\n      dup2\n        /* \"#utility.yul\":5400:5420   */\n      sub\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5385:5394   */\n      dup4\n        /* \"#utility.yul\":5381:5398   */\n      add\n        /* \"#utility.yul\":5374:5421   */\n      mstore\n        /* \"#utility.yul\":5438:5569   */\n      tag_151\n        /* \"#utility.yul\":5564:5568   */\n      dup2\n        /* \"#utility.yul\":5438:5569   */\n      tag_100\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5430:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5157:5576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5582:5762   */\n    tag_101:\n        /* \"#utility.yul\":5630:5707   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5627:5628   */\n      0x00\n        /* \"#utility.yul\":5620:5708   */\n      mstore\n        /* \"#utility.yul\":5727:5731   */\n      0x11\n        /* \"#utility.yul\":5724:5725   */\n      0x04\n        /* \"#utility.yul\":5717:5732   */\n      mstore\n        /* \"#utility.yul\":5751:5755   */\n      0x24\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5741:5756   */\n      revert\n        /* \"#utility.yul\":5768:5959   */\n    tag_64:\n        /* \"#utility.yul\":5808:5811   */\n      0x00\n        /* \"#utility.yul\":5827:5847   */\n      tag_154\n        /* \"#utility.yul\":5845:5846   */\n      dup3\n        /* \"#utility.yul\":5827:5847   */\n      tag_90\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5822:5847   */\n      swap2\n      pop\n        /* \"#utility.yul\":5861:5881   */\n      tag_155\n        /* \"#utility.yul\":5879:5880   */\n      dup4\n        /* \"#utility.yul\":5861:5881   */\n      tag_90\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5856:5881   */\n      swap3\n      pop\n        /* \"#utility.yul\":5904:5905   */\n      dup3\n        /* \"#utility.yul\":5901:5902   */\n      dup3\n        /* \"#utility.yul\":5897:5906   */\n      add\n        /* \"#utility.yul\":5890:5906   */\n      swap1\n      pop\n        /* \"#utility.yul\":5925:5928   */\n      dup1\n        /* \"#utility.yul\":5922:5923   */\n      dup3\n        /* \"#utility.yul\":5919:5929   */\n      gt\n        /* \"#utility.yul\":5916:5952   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":5932:5950   */\n      tag_157\n      tag_101\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5916:5952   */\n    tag_156:\n        /* \"#utility.yul\":5768:5959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122097b50db7705908c10bc5a8e70799cb5a54097ef99a215c847a5758c0a5ccf9d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 192,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1472:3",
										"nodeType": "YulBlock",
										"src": "0:1472:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "638:32:3",
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nativeSrc": "648:16:3",
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:3",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:3",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:3",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nativeSrc": "704:152:3",
													"nodeType": "YulBlock",
													"src": "704:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "721:1:3",
																		"nodeType": "YulLiteral",
																		"src": "721:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "724:77:3",
																		"nodeType": "YulLiteral",
																		"src": "724:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "714:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:3"
																},
																"nativeSrc": "714:88:3",
																"nodeType": "YulFunctionCall",
																"src": "714:88:3"
															},
															"nativeSrc": "714:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "714:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:3",
																		"nodeType": "YulLiteral",
																		"src": "818:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "821:4:3",
																		"nodeType": "YulLiteral",
																		"src": "821:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "811:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:3"
																},
																"nativeSrc": "811:15:3",
																"nodeType": "YulFunctionCall",
																"src": "811:15:3"
															},
															"nativeSrc": "811:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "811:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "842:1:3",
																		"nodeType": "YulLiteral",
																		"src": "842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "845:4:3",
																		"nodeType": "YulLiteral",
																		"src": "845:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "835:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:3"
																},
																"nativeSrc": "835:15:3",
																"nodeType": "YulFunctionCall",
																"src": "835:15:3"
															},
															"nativeSrc": "835:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "835:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "676:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "676:180:3"
											},
											{
												"body": {
													"nativeSrc": "910:362:3",
													"nodeType": "YulBlock",
													"src": "910:362:3",
													"statements": [
														{
															"nativeSrc": "920:25:3",
															"nodeType": "YulAssignment",
															"src": "920:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "943:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "943:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "925:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "925:17:3"
																},
																"nativeSrc": "925:20:3",
																"nodeType": "YulFunctionCall",
																"src": "925:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "920:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:1:3"
																}
															]
														},
														{
															"nativeSrc": "954:25:3",
															"nodeType": "YulAssignment",
															"src": "954:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "977:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "977:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "959:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "959:17:3"
																},
																"nativeSrc": "959:20:3",
																"nodeType": "YulFunctionCall",
																"src": "959:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "954:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "954:1:3"
																}
															]
														},
														{
															"nativeSrc": "988:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "988:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1011:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1011:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1014:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1014:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1007:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:3"
																},
																"nativeSrc": "1007:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1007:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "992:11:3",
																	"nodeType": "YulTypedName",
																	"src": "992:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1025:41:3",
															"nodeType": "YulAssignment",
															"src": "1025:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "1054:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "1054:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1036:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1036:17:3"
																},
																"nativeSrc": "1036:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1036:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1025:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1025:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1243:22:3",
																"nodeType": "YulBlock",
																"src": "1243:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1245:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1245:16:3"
																			},
																			"nativeSrc": "1245:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1245:18:3"
																		},
																		"nativeSrc": "1245:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1176:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "1176:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:3"
																				},
																				"nativeSrc": "1169:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1199:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "1199:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1206:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "1206:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1215:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "1215:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1202:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1202:3:3"
																						},
																						"nativeSrc": "1202:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1202:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1196:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "1196:2:3"
																				},
																				"nativeSrc": "1196:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1196:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1149:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1149:2:3"
																		},
																		"nativeSrc": "1149:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1129:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:3"
																},
																"nativeSrc": "1129:113:3",
																"nodeType": "YulFunctionCall",
																"src": "1129:113:3"
															},
															"nativeSrc": "1126:139:3",
															"nodeType": "YulIf",
															"src": "1126:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "862:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "893:1:3",
														"nodeType": "YulTypedName",
														"src": "893:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "896:1:3",
														"nodeType": "YulTypedName",
														"src": "896:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "902:7:3",
														"nodeType": "YulTypedName",
														"src": "902:7:3",
														"type": ""
													}
												],
												"src": "862:410:3"
											},
											{
												"body": {
													"nativeSrc": "1322:147:3",
													"nodeType": "YulBlock",
													"src": "1322:147:3",
													"statements": [
														{
															"nativeSrc": "1332:25:3",
															"nodeType": "YulAssignment",
															"src": "1332:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1355:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1355:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1337:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1337:17:3"
																},
																"nativeSrc": "1337:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1337:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1332:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "1332:1:3"
																}
															]
														},
														{
															"nativeSrc": "1366:25:3",
															"nodeType": "YulAssignment",
															"src": "1366:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1389:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1389:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1371:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1371:17:3"
																},
																"nativeSrc": "1371:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1371:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1366:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "1366:1:3"
																}
															]
														},
														{
															"nativeSrc": "1400:16:3",
															"nodeType": "YulAssignment",
															"src": "1400:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1411:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1411:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1414:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1414:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1407:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:3"
																},
																"nativeSrc": "1407:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1407:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1440:22:3",
																"nodeType": "YulBlock",
																"src": "1440:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1442:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1442:16:3"
																			},
																			"nativeSrc": "1442:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1442:18:3"
																		},
																		"nativeSrc": "1442:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1432:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1432:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1435:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1435:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1429:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1429:2:3"
																},
																"nativeSrc": "1429:10:3",
																"nodeType": "YulFunctionCall",
																"src": "1429:10:3"
															},
															"nativeSrc": "1426:36:3",
															"nodeType": "YulIf",
															"src": "1426:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1278:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1309:1:3",
														"nodeType": "YulTypedName",
														"src": "1309:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1312:1:3",
														"nodeType": "YulTypedName",
														"src": "1312:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1318:3:3",
														"nodeType": "YulTypedName",
														"src": "1318:3:3",
														"type": ""
													}
												],
												"src": "1278:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101c0565b60405180910390fd5b610090816100c060201b60201c565b504260808181525050603c60016100a7919061020f565b6080516100b49190610250565b60a08181525050610283565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101aa82610181565b9050919050565b6101ba816101a0565b82525050565b5f6020820190506101d35f8301846101b1565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610219826101d9565b9150610224836101d9565b9250828202610232816101d9565b91508282048414831517610249576102486101e2565b5b5092915050565b5f61025a826101d9565b9150610265836101d9565b925082820190508082111561027d5761027c6101e2565b5b92915050565b60805160a05161083e6102a45f395f61029a01525f61026f015261083e5ff3fe608060405260043610610058575f3560e01c80633ccfd60b1461005b578063410a1d3214610085578063715018a6146100c15780638da5cb5b146100d7578063ed88c68e14610101578063f2fde38b1461010b57610059565b5b005b348015610066575f5ffd5b5061006f610133565b60405161007c919061058c565b60405180910390f35b348015610090575f5ffd5b506100ab60048036038101906100a69190610603565b6101ab565b6040516100b89190610646565b60405180910390f35b3480156100cc575f5ffd5b506100d56101f1565b005b3480156100e2575f5ffd5b506100eb610204565b6040516100f8919061066e565b60405180910390f35b61010961022b565b005b348015610116575f5ffd5b50610131600480360381019061012c9190610603565b61039f565b005b5f61013c610423565b5f3373ffffffffffffffffffffffffffffffffffffffff1647604051610161906106b4565b5f6040518083038185875af1925050503d805f811461019b576040519150601f19603f3d011682016040523d82523d5f602084013e6101a0565b606091505b505090508091505090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6101f9610423565b6102025f6104aa565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f341161026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610722565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042101580156102bd57507f00000000000000000000000000000000000000000000000000000000000000004211155b6102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f39061078a565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034891906107d5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e346040516103959190610646565b60405180910390a2565b6103a7610423565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610417575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040e919061066e565b60405180910390fd5b610420816104aa565b50565b61042b61056b565b73ffffffffffffffffffffffffffffffffffffffff16610449610204565b73ffffffffffffffffffffffffffffffffffffffff16146104a85761046c61056b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049f919061066e565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8115159050919050565b61058681610572565b82525050565b5f60208201905061059f5f83018461057d565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105d2826105a9565b9050919050565b6105e2816105c8565b81146105ec575f5ffd5b50565b5f813590506105fd816105d9565b92915050565b5f60208284031215610618576106176105a5565b5b5f610625848285016105ef565b91505092915050565b5f819050919050565b6106408161062e565b82525050565b5f6020820190506106595f830184610637565b92915050565b610668816105c8565b82525050565b5f6020820190506106815f83018461065f565b92915050565b5f81905092915050565b50565b5f61069f5f83610687565b91506106aa82610691565b5f82019050919050565b5f6106be82610694565b9150819050919050565b5f82825260208201905092915050565b7f646f6e6174652076616c7565206d757374206772656174207468616e203000005f82015250565b5f61070c601e836106c8565b9150610717826106d8565b602082019050919050565b5f6020820190508181035f83015261073981610700565b9050919050565b7f74696d65206973206e6f7420616c6c6f776564000000000000000000000000005f82015250565b5f6107746013836106c8565b915061077f82610740565b602082019050919050565b5f6020820190508181035f8301526107a181610768565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107df8261062e565b91506107ea8361062e565b9250828201905080821115610802576108016107a8565b5b9291505056fea264697066735822122097b50db7705908c10bc5a8e70799cb5a54097ef99a215c847a5758c0a5ccf9d664736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP TIMESTAMP PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0x3C PUSH1 0x1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x283 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA DUP3 PUSH2 0x181 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x1A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x219 DUP3 PUSH2 0x1D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x224 DUP4 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x232 DUP2 PUSH2 0x1D9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x1E2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A DUP3 PUSH2 0x1D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x265 DUP4 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D JUMPI PUSH2 0x27C PUSH2 0x1E2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x83E PUSH2 0x2A4 PUSH0 CODECOPY PUSH0 PUSH2 0x29A ADD MSTORE PUSH0 PUSH2 0x26F ADD MSTORE PUSH2 0x83E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI PUSH2 0x59 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x22B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x13C PUSH2 0x423 JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x161 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x202 PUSH0 PUSH2 0x4AA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264 SWAP1 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI POP PUSH32 0x0 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x423 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x417 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x4AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x56B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x449 PUSH2 0x204 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A8 JUMPI PUSH2 0x46C PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59F PUSH0 DUP4 ADD DUP5 PUSH2 0x57D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x5A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH2 0x62E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x659 PUSH0 DUP4 ADD DUP5 PUSH2 0x637 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x668 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH0 DUP4 ADD DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x69F PUSH0 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x6AA DUP3 PUSH2 0x691 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6BE DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x646F6E6174652076616C7565206D757374206772656174207468616E20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x70C PUSH1 0x1E DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x717 DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x739 DUP2 PUSH2 0x700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74696D65206973206E6F7420616C6C6F77656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x774 PUSH1 0x13 DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x77F DUP3 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7A1 DUP2 PUSH2 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7DF DUP3 PUSH2 0x62E JUMP JUMPDEST SWAP2 POP PUSH2 0x7EA DUP4 PUSH2 0x62E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH2 0x801 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xB5 0xD 0xB7 PUSH17 0x5908C10BC5A8E70799CB5A54097EF99A21 TLOAD DUP5 PUSH27 0x5758C0A5CCF9D664736F6C634300081E0033000000000000000000 ",
							"sourceMap": "112:1091:2:-:0;;;397:126;;;;;;;;;;419:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;454:15:2::1;442:27;;;;::::0;::::1;513:2;332:1;502:13;;;;:::i;:::-;490:9;;:25;;;;:::i;:::-;480:35;;;;::::0;::::1;112:1091:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:180::-;724:77;721:1;714:88;821:4;818:1;811:15;845:4;842:1;835:15;862:410;902:7;925:20;943:1;925:20;:::i;:::-;920:25;;959:20;977:1;959:20;:::i;:::-;954:25;;1014:1;1011;1007:9;1036:30;1054:11;1036:30;:::i;:::-;1025:41;;1215:1;1206:7;1202:15;1199:1;1196:22;1176:1;1169:9;1149:83;1126:139;;1245:18;;:::i;:::-;1126:139;910:362;862:410;;;;:::o;1278:191::-;1318:3;1337:20;1355:1;1337:20;:::i;:::-;1332:25;;1371:20;1389:1;1371:20;:::i;:::-;1366:25;;1414:1;1411;1407:9;1400:16;;1435:3;1432:1;1429:10;1426:36;;;1442:18;;:::i;:::-;1426:36;1278:191;;;;:::o;112:1091:2:-;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1059,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1387,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1194,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_260": {
									"entryPoint": 555,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDonation_299": {
									"entryPoint": 427,
									"id": 299,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 516,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 497,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 927,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_287": {
									"entryPoint": 307,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5962:3",
										"nodeType": "YulBlock",
										"src": "0:5962:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:3",
													"nodeType": "YulBlock",
													"src": "49:48:3",
													"statements": [
														{
															"nativeSrc": "59:32:3",
															"nodeType": "YulAssignment",
															"src": "59:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:3"
																		},
																		"nativeSrc": "77:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:3"
																},
																"nativeSrc": "70:21:3",
																"nodeType": "YulFunctionCall",
																"src": "70:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:3",
														"nodeType": "YulTypedName",
														"src": "31:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:3",
														"nodeType": "YulTypedName",
														"src": "41:7:3",
														"type": ""
													}
												],
												"src": "7:90:3"
											},
											{
												"body": {
													"nativeSrc": "162:50:3",
													"nodeType": "YulBlock",
													"src": "162:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:3"
																		},
																		"nativeSrc": "184:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:3"
																},
																"nativeSrc": "172:34:3",
																"nodeType": "YulFunctionCall",
																"src": "172:34:3"
															},
															"nativeSrc": "172:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:3",
														"nodeType": "YulTypedName",
														"src": "150:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:3",
														"nodeType": "YulTypedName",
														"src": "157:3:3",
														"type": ""
													}
												],
												"src": "103:109:3"
											},
											{
												"body": {
													"nativeSrc": "310:118:3",
													"nodeType": "YulBlock",
													"src": "310:118:3",
													"statements": [
														{
															"nativeSrc": "320:26:3",
															"nodeType": "YulAssignment",
															"src": "320:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:3",
																		"nodeType": "YulLiteral",
																		"src": "343:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:3"
																},
																"nativeSrc": "328:18:3",
																"nodeType": "YulFunctionCall",
																"src": "328:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:3",
																				"nodeType": "YulLiteral",
																				"src": "418:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:3"
																		},
																		"nativeSrc": "403:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:3"
																},
																"nativeSrc": "356:65:3",
																"nodeType": "YulFunctionCall",
																"src": "356:65:3"
															},
															"nativeSrc": "356:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:3",
														"nodeType": "YulTypedName",
														"src": "282:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:3",
														"nodeType": "YulTypedName",
														"src": "294:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:3",
														"nodeType": "YulTypedName",
														"src": "305:4:3",
														"type": ""
													}
												],
												"src": "218:210:3"
											},
											{
												"body": {
													"nativeSrc": "474:35:3",
													"nodeType": "YulBlock",
													"src": "474:35:3",
													"statements": [
														{
															"nativeSrc": "484:19:3",
															"nodeType": "YulAssignment",
															"src": "484:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "500:2:3",
																		"nodeType": "YulLiteral",
																		"src": "500:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "494:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "494:5:3"
																},
																"nativeSrc": "494:9:3",
																"nodeType": "YulFunctionCall",
																"src": "494:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "484:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "434:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "467:6:3",
														"nodeType": "YulTypedName",
														"src": "467:6:3",
														"type": ""
													}
												],
												"src": "434:75:3"
											},
											{
												"body": {
													"nativeSrc": "604:28:3",
													"nodeType": "YulBlock",
													"src": "604:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "621:1:3",
																		"nodeType": "YulLiteral",
																		"src": "621:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "624:1:3",
																		"nodeType": "YulLiteral",
																		"src": "624:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "614:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:3"
																},
																"nativeSrc": "614:12:3",
																"nodeType": "YulFunctionCall",
																"src": "614:12:3"
															},
															"nativeSrc": "614:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "614:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "515:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "515:117:3"
											},
											{
												"body": {
													"nativeSrc": "727:28:3",
													"nodeType": "YulBlock",
													"src": "727:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "744:1:3",
																		"nodeType": "YulLiteral",
																		"src": "744:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "747:1:3",
																		"nodeType": "YulLiteral",
																		"src": "747:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "737:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:3"
																},
																"nativeSrc": "737:12:3",
																"nodeType": "YulFunctionCall",
																"src": "737:12:3"
															},
															"nativeSrc": "737:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "737:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "638:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "638:117:3"
											},
											{
												"body": {
													"nativeSrc": "806:81:3",
													"nodeType": "YulBlock",
													"src": "806:81:3",
													"statements": [
														{
															"nativeSrc": "816:65:3",
															"nodeType": "YulAssignment",
															"src": "816:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "831:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "831:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "838:42:3",
																		"nodeType": "YulLiteral",
																		"src": "838:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "827:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:3"
																},
																"nativeSrc": "827:54:3",
																"nodeType": "YulFunctionCall",
																"src": "827:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "816:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "761:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "788:5:3",
														"nodeType": "YulTypedName",
														"src": "788:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "798:7:3",
														"nodeType": "YulTypedName",
														"src": "798:7:3",
														"type": ""
													}
												],
												"src": "761:126:3"
											},
											{
												"body": {
													"nativeSrc": "938:51:3",
													"nodeType": "YulBlock",
													"src": "938:51:3",
													"statements": [
														{
															"nativeSrc": "948:35:3",
															"nodeType": "YulAssignment",
															"src": "948:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "977:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "977:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "959:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "959:17:3"
																},
																"nativeSrc": "959:24:3",
																"nodeType": "YulFunctionCall",
																"src": "959:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "948:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "948:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "893:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "920:5:3",
														"nodeType": "YulTypedName",
														"src": "920:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "930:7:3",
														"nodeType": "YulTypedName",
														"src": "930:7:3",
														"type": ""
													}
												],
												"src": "893:96:3"
											},
											{
												"body": {
													"nativeSrc": "1038:79:3",
													"nodeType": "YulBlock",
													"src": "1038:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1095:16:3",
																"nodeType": "YulBlock",
																"src": "1095:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1104:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1104:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1107:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1107:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1097:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1097:6:3"
																			},
																			"nativeSrc": "1097:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1097:12:3"
																		},
																		"nativeSrc": "1097:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1061:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1061:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1086:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1086:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1068:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1068:17:3"
																				},
																				"nativeSrc": "1068:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1068:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1058:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1058:2:3"
																		},
																		"nativeSrc": "1058:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1058:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1051:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:3"
																},
																"nativeSrc": "1051:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1051:43:3"
															},
															"nativeSrc": "1048:63:3",
															"nodeType": "YulIf",
															"src": "1048:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "995:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1031:5:3",
														"nodeType": "YulTypedName",
														"src": "1031:5:3",
														"type": ""
													}
												],
												"src": "995:122:3"
											},
											{
												"body": {
													"nativeSrc": "1175:87:3",
													"nodeType": "YulBlock",
													"src": "1175:87:3",
													"statements": [
														{
															"nativeSrc": "1185:29:3",
															"nodeType": "YulAssignment",
															"src": "1185:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1207:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1207:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1194:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1194:12:3"
																},
																"nativeSrc": "1194:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1194:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1185:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1185:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1250:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1250:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1223:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1223:26:3"
																},
																"nativeSrc": "1223:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1223:33:3"
															},
															"nativeSrc": "1223:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1223:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1123:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1153:6:3",
														"nodeType": "YulTypedName",
														"src": "1153:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1161:3:3",
														"nodeType": "YulTypedName",
														"src": "1161:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1169:5:3",
														"nodeType": "YulTypedName",
														"src": "1169:5:3",
														"type": ""
													}
												],
												"src": "1123:139:3"
											},
											{
												"body": {
													"nativeSrc": "1334:263:3",
													"nodeType": "YulBlock",
													"src": "1334:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:3",
																"nodeType": "YulBlock",
																"src": "1380:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:3"
																			},
																			"nativeSrc": "1382:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:3"
																		},
																		"nativeSrc": "1382:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1355:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1355:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1364:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1351:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:3"
																		},
																		"nativeSrc": "1351:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1351:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1347:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:3"
																},
																"nativeSrc": "1347:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1347:32:3"
															},
															"nativeSrc": "1344:119:3",
															"nodeType": "YulIf",
															"src": "1344:119:3"
														},
														{
															"nativeSrc": "1473:117:3",
															"nodeType": "YulBlock",
															"src": "1473:117:3",
															"statements": [
																{
																	"nativeSrc": "1488:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1517:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1552:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1552:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1563:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1563:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1548:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1548:3:3"
																				},
																				"nativeSrc": "1548:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1548:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1572:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1572:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1527:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1527:20:3"
																		},
																		"nativeSrc": "1527:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1268:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1304:9:3",
														"nodeType": "YulTypedName",
														"src": "1304:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1315:7:3",
														"nodeType": "YulTypedName",
														"src": "1315:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1327:6:3",
														"nodeType": "YulTypedName",
														"src": "1327:6:3",
														"type": ""
													}
												],
												"src": "1268:329:3"
											},
											{
												"body": {
													"nativeSrc": "1648:32:3",
													"nodeType": "YulBlock",
													"src": "1648:32:3",
													"statements": [
														{
															"nativeSrc": "1658:16:3",
															"nodeType": "YulAssignment",
															"src": "1658:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1669:5:3",
																"nodeType": "YulIdentifier",
																"src": "1669:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1658:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1603:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:3",
														"nodeType": "YulTypedName",
														"src": "1630:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1640:7:3",
														"nodeType": "YulTypedName",
														"src": "1640:7:3",
														"type": ""
													}
												],
												"src": "1603:77:3"
											},
											{
												"body": {
													"nativeSrc": "1751:53:3",
													"nodeType": "YulBlock",
													"src": "1751:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1791:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1773:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:3"
																		},
																		"nativeSrc": "1773:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1761:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:3"
																},
																"nativeSrc": "1761:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1761:37:3"
															},
															"nativeSrc": "1761:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1686:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:3",
														"nodeType": "YulTypedName",
														"src": "1739:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1746:3:3",
														"nodeType": "YulTypedName",
														"src": "1746:3:3",
														"type": ""
													}
												],
												"src": "1686:118:3"
											},
											{
												"body": {
													"nativeSrc": "1908:124:3",
													"nodeType": "YulBlock",
													"src": "1908:124:3",
													"statements": [
														{
															"nativeSrc": "1918:26:3",
															"nodeType": "YulAssignment",
															"src": "1918:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:3"
																},
																"nativeSrc": "1926:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:3"
																		},
																		"nativeSrc": "2007:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1954:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1954:43:3"
																},
																"nativeSrc": "1954:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1954:71:3"
															},
															"nativeSrc": "1954:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1954:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1810:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:3",
														"nodeType": "YulTypedName",
														"src": "1880:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1892:6:3",
														"nodeType": "YulTypedName",
														"src": "1892:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1903:4:3",
														"nodeType": "YulTypedName",
														"src": "1903:4:3",
														"type": ""
													}
												],
												"src": "1810:222:3"
											},
											{
												"body": {
													"nativeSrc": "2103:53:3",
													"nodeType": "YulBlock",
													"src": "2103:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2125:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:3"
																		},
																		"nativeSrc": "2125:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:3"
																},
																"nativeSrc": "2113:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:3"
															},
															"nativeSrc": "2113:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2038:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:3",
														"nodeType": "YulTypedName",
														"src": "2091:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:3",
														"nodeType": "YulTypedName",
														"src": "2098:3:3",
														"type": ""
													}
												],
												"src": "2038:118:3"
											},
											{
												"body": {
													"nativeSrc": "2260:124:3",
													"nodeType": "YulBlock",
													"src": "2260:124:3",
													"statements": [
														{
															"nativeSrc": "2270:26:3",
															"nodeType": "YulAssignment",
															"src": "2270:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:3"
																},
																"nativeSrc": "2278:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:3"
																		},
																		"nativeSrc": "2359:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2306:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:3"
																},
																"nativeSrc": "2306:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:3"
															},
															"nativeSrc": "2306:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2162:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:3",
														"nodeType": "YulTypedName",
														"src": "2232:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:3",
														"nodeType": "YulTypedName",
														"src": "2244:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:3",
														"nodeType": "YulTypedName",
														"src": "2255:4:3",
														"type": ""
													}
												],
												"src": "2162:222:3"
											},
											{
												"body": {
													"nativeSrc": "2503:34:3",
													"nodeType": "YulBlock",
													"src": "2503:34:3",
													"statements": [
														{
															"nativeSrc": "2513:18:3",
															"nodeType": "YulAssignment",
															"src": "2513:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "2528:3:3",
																"nodeType": "YulIdentifier",
																"src": "2528:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2513:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2513:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2390:147:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2475:3:3",
														"nodeType": "YulTypedName",
														"src": "2475:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2480:6:3",
														"nodeType": "YulTypedName",
														"src": "2480:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2491:11:3",
														"nodeType": "YulTypedName",
														"src": "2491:11:3",
														"type": ""
													}
												],
												"src": "2390:147:3"
											},
											{
												"body": {
													"nativeSrc": "2649:8:3",
													"nodeType": "YulBlock",
													"src": "2649:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "2543:114:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2641:6:3",
														"nodeType": "YulTypedName",
														"src": "2641:6:3",
														"type": ""
													}
												],
												"src": "2543:114:3"
											},
											{
												"body": {
													"nativeSrc": "2826:235:3",
													"nodeType": "YulBlock",
													"src": "2826:235:3",
													"statements": [
														{
															"nativeSrc": "2836:90:3",
															"nodeType": "YulAssignment",
															"src": "2836:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2919:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2919:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2924:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2924:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2843:75:3",
																	"nodeType": "YulIdentifier",
																	"src": "2843:75:3"
																},
																"nativeSrc": "2843:83:3",
																"nodeType": "YulFunctionCall",
																"src": "2843:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2836:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2836:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3024:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "2935:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2935:88:3"
																},
																"nativeSrc": "2935:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2935:93:3"
															},
															"nativeSrc": "2935:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2935:93:3"
														},
														{
															"nativeSrc": "3037:18:3",
															"nodeType": "YulAssignment",
															"src": "3037:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3048:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3053:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3053:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3044:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:3"
																},
																"nativeSrc": "3044:11:3",
																"nodeType": "YulFunctionCall",
																"src": "3044:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3037:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2663:398:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2814:3:3",
														"nodeType": "YulTypedName",
														"src": "2814:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2822:3:3",
														"nodeType": "YulTypedName",
														"src": "2822:3:3",
														"type": ""
													}
												],
												"src": "2663:398:3"
											},
											{
												"body": {
													"nativeSrc": "3255:191:3",
													"nodeType": "YulBlock",
													"src": "3255:191:3",
													"statements": [
														{
															"nativeSrc": "3266:154:3",
															"nodeType": "YulAssignment",
															"src": "3266:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3416:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3273:141:3",
																	"nodeType": "YulIdentifier",
																	"src": "3273:141:3"
																},
																"nativeSrc": "3273:147:3",
																"nodeType": "YulFunctionCall",
																"src": "3273:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3266:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3266:3:3"
																}
															]
														},
														{
															"nativeSrc": "3430:10:3",
															"nodeType": "YulAssignment",
															"src": "3430:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "3437:3:3",
																"nodeType": "YulIdentifier",
																"src": "3437:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3430:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3430:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3067:379:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3242:3:3",
														"nodeType": "YulTypedName",
														"src": "3242:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3251:3:3",
														"nodeType": "YulTypedName",
														"src": "3251:3:3",
														"type": ""
													}
												],
												"src": "3067:379:3"
											},
											{
												"body": {
													"nativeSrc": "3548:73:3",
													"nodeType": "YulBlock",
													"src": "3548:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3565:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3565:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3570:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3570:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:3"
																},
																"nativeSrc": "3558:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3558:19:3"
															},
															"nativeSrc": "3558:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3558:19:3"
														},
														{
															"nativeSrc": "3586:29:3",
															"nodeType": "YulAssignment",
															"src": "3586:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3605:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3605:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3610:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3610:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3601:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3601:3:3"
																},
																"nativeSrc": "3601:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3601:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3586:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3586:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3452:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3520:3:3",
														"nodeType": "YulTypedName",
														"src": "3520:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3525:6:3",
														"nodeType": "YulTypedName",
														"src": "3525:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3536:11:3",
														"nodeType": "YulTypedName",
														"src": "3536:11:3",
														"type": ""
													}
												],
												"src": "3452:169:3"
											},
											{
												"body": {
													"nativeSrc": "3733:74:3",
													"nodeType": "YulBlock",
													"src": "3733:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3755:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3763:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3763:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3751:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3751:3:3"
																		},
																		"nativeSrc": "3751:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3751:14:3"
																	},
																	{
																		"hexValue": "646f6e6174652076616c7565206d757374206772656174207468616e2030",
																		"kind": "string",
																		"nativeSrc": "3767:32:3",
																		"nodeType": "YulLiteral",
																		"src": "3767:32:3",
																		"type": "",
																		"value": "donate value must great than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3744:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3744:6:3"
																},
																"nativeSrc": "3744:56:3",
																"nodeType": "YulFunctionCall",
																"src": "3744:56:3"
															},
															"nativeSrc": "3744:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "3744:56:3"
														}
													]
												},
												"name": "store_literal_in_memory_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46",
												"nativeSrc": "3627:180:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3725:6:3",
														"nodeType": "YulTypedName",
														"src": "3725:6:3",
														"type": ""
													}
												],
												"src": "3627:180:3"
											},
											{
												"body": {
													"nativeSrc": "3959:220:3",
													"nodeType": "YulBlock",
													"src": "3959:220:3",
													"statements": [
														{
															"nativeSrc": "3969:74:3",
															"nodeType": "YulAssignment",
															"src": "3969:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4035:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4035:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3976:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3976:58:3"
																},
																"nativeSrc": "3976:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3976:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3969:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4141:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46",
																	"nativeSrc": "4052:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4052:88:3"
																},
																"nativeSrc": "4052:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4052:93:3"
															},
															"nativeSrc": "4052:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4052:93:3"
														},
														{
															"nativeSrc": "4154:19:3",
															"nodeType": "YulAssignment",
															"src": "4154:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4165:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4165:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4170:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4161:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4161:3:3"
																},
																"nativeSrc": "4161:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4161:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4154:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3813:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3947:3:3",
														"nodeType": "YulTypedName",
														"src": "3947:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3955:3:3",
														"nodeType": "YulTypedName",
														"src": "3955:3:3",
														"type": ""
													}
												],
												"src": "3813:366:3"
											},
											{
												"body": {
													"nativeSrc": "4356:248:3",
													"nodeType": "YulBlock",
													"src": "4356:248:3",
													"statements": [
														{
															"nativeSrc": "4366:26:3",
															"nodeType": "YulAssignment",
															"src": "4366:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4378:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4374:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:3"
																},
																"nativeSrc": "4374:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4374:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4366:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4366:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4424:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4424:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4409:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:3"
																		},
																		"nativeSrc": "4409:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4432:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4432:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4438:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4428:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:3"
																		},
																		"nativeSrc": "4428:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:3"
																},
																"nativeSrc": "4402:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4402:47:3"
															},
															"nativeSrc": "4402:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4402:47:3"
														},
														{
															"nativeSrc": "4458:139:3",
															"nodeType": "YulAssignment",
															"src": "4458:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4592:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4592:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4466:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4466:124:3"
																},
																"nativeSrc": "4466:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4466:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4458:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4458:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4185:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4336:9:3",
														"nodeType": "YulTypedName",
														"src": "4336:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4351:4:3",
														"nodeType": "YulTypedName",
														"src": "4351:4:3",
														"type": ""
													}
												],
												"src": "4185:419:3"
											},
											{
												"body": {
													"nativeSrc": "4716:63:3",
													"nodeType": "YulBlock",
													"src": "4716:63:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4738:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4738:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4746:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4746:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4734:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:3"
																		},
																		"nativeSrc": "4734:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:14:3"
																	},
																	{
																		"hexValue": "74696d65206973206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "4750:21:3",
																		"nodeType": "YulLiteral",
																		"src": "4750:21:3",
																		"type": "",
																		"value": "time is not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4727:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:3"
																},
																"nativeSrc": "4727:45:3",
																"nodeType": "YulFunctionCall",
																"src": "4727:45:3"
															},
															"nativeSrc": "4727:45:3",
															"nodeType": "YulExpressionStatement",
															"src": "4727:45:3"
														}
													]
												},
												"name": "store_literal_in_memory_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295",
												"nativeSrc": "4610:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4708:6:3",
														"nodeType": "YulTypedName",
														"src": "4708:6:3",
														"type": ""
													}
												],
												"src": "4610:169:3"
											},
											{
												"body": {
													"nativeSrc": "4931:220:3",
													"nodeType": "YulBlock",
													"src": "4931:220:3",
													"statements": [
														{
															"nativeSrc": "4941:74:3",
															"nodeType": "YulAssignment",
															"src": "4941:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5007:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5007:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5012:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5012:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4948:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4948:58:3"
																},
																"nativeSrc": "4948:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4948:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4941:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4941:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5113:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5113:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295",
																	"nativeSrc": "5024:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5024:88:3"
																},
																"nativeSrc": "5024:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5024:93:3"
															},
															"nativeSrc": "5024:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5024:93:3"
														},
														{
															"nativeSrc": "5126:19:3",
															"nodeType": "YulAssignment",
															"src": "5126:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5137:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5137:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5142:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5142:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5133:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:3"
																},
																"nativeSrc": "5133:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5133:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5126:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5126:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4785:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4919:3:3",
														"nodeType": "YulTypedName",
														"src": "4919:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4927:3:3",
														"nodeType": "YulTypedName",
														"src": "4927:3:3",
														"type": ""
													}
												],
												"src": "4785:366:3"
											},
											{
												"body": {
													"nativeSrc": "5328:248:3",
													"nodeType": "YulBlock",
													"src": "5328:248:3",
													"statements": [
														{
															"nativeSrc": "5338:26:3",
															"nodeType": "YulAssignment",
															"src": "5338:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5350:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5350:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5361:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5346:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:3"
																},
																"nativeSrc": "5346:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5338:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5385:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5396:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5396:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5381:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:3"
																		},
																		"nativeSrc": "5381:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5381:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5404:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5410:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5410:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5400:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:3"
																		},
																		"nativeSrc": "5400:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5374:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5374:6:3"
																},
																"nativeSrc": "5374:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5374:47:3"
															},
															"nativeSrc": "5374:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5374:47:3"
														},
														{
															"nativeSrc": "5430:139:3",
															"nodeType": "YulAssignment",
															"src": "5430:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5564:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5438:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5438:124:3"
																},
																"nativeSrc": "5438:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5438:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5430:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5430:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5157:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5308:9:3",
														"nodeType": "YulTypedName",
														"src": "5308:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5323:4:3",
														"nodeType": "YulTypedName",
														"src": "5323:4:3",
														"type": ""
													}
												],
												"src": "5157:419:3"
											},
											{
												"body": {
													"nativeSrc": "5610:152:3",
													"nodeType": "YulBlock",
													"src": "5610:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5627:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5627:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5630:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5630:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5620:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:3"
																},
																"nativeSrc": "5620:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5620:88:3"
															},
															"nativeSrc": "5620:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5620:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5724:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5724:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5727:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5727:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5717:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:3"
																},
																"nativeSrc": "5717:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5717:15:3"
															},
															"nativeSrc": "5717:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5717:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5748:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5748:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5751:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5751:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5741:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5741:6:3"
																},
																"nativeSrc": "5741:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5741:15:3"
															},
															"nativeSrc": "5741:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5741:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5582:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5582:180:3"
											},
											{
												"body": {
													"nativeSrc": "5812:147:3",
													"nodeType": "YulBlock",
													"src": "5812:147:3",
													"statements": [
														{
															"nativeSrc": "5822:25:3",
															"nodeType": "YulAssignment",
															"src": "5822:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5845:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5845:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5827:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5827:17:3"
																},
																"nativeSrc": "5827:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5827:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5822:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5822:1:3"
																}
															]
														},
														{
															"nativeSrc": "5856:25:3",
															"nodeType": "YulAssignment",
															"src": "5856:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5879:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5879:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5861:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5861:17:3"
																},
																"nativeSrc": "5861:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5861:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5856:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5856:1:3"
																}
															]
														},
														{
															"nativeSrc": "5890:16:3",
															"nodeType": "YulAssignment",
															"src": "5890:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5901:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5901:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5904:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5904:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5897:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5897:3:3"
																},
																"nativeSrc": "5897:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5897:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5890:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5890:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5930:22:3",
																"nodeType": "YulBlock",
																"src": "5930:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5932:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5932:16:3"
																			},
																			"nativeSrc": "5932:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5932:18:3"
																		},
																		"nativeSrc": "5932:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5932:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5922:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5922:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5925:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5925:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5919:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5919:2:3"
																},
																"nativeSrc": "5919:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5919:10:3"
															},
															"nativeSrc": "5916:36:3",
															"nodeType": "YulIf",
															"src": "5916:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5768:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5799:1:3",
														"nodeType": "YulTypedName",
														"src": "5799:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5802:1:3",
														"nodeType": "YulTypedName",
														"src": "5802:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5808:3:3",
														"nodeType": "YulTypedName",
														"src": "5808:3:3",
														"type": ""
													}
												],
												"src": "5768:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46(memPtr) {\n\n        mstore(add(memPtr, 0), \"donate value must great than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295(memPtr) {\n\n        mstore(add(memPtr, 0), \"time is not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"188": [
									{
										"length": 32,
										"start": 623
									}
								],
								"190": [
									{
										"length": 32,
										"start": 666
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c80633ccfd60b1461005b578063410a1d3214610085578063715018a6146100c15780638da5cb5b146100d7578063ed88c68e14610101578063f2fde38b1461010b57610059565b5b005b348015610066575f5ffd5b5061006f610133565b60405161007c919061058c565b60405180910390f35b348015610090575f5ffd5b506100ab60048036038101906100a69190610603565b6101ab565b6040516100b89190610646565b60405180910390f35b3480156100cc575f5ffd5b506100d56101f1565b005b3480156100e2575f5ffd5b506100eb610204565b6040516100f8919061066e565b60405180910390f35b61010961022b565b005b348015610116575f5ffd5b50610131600480360381019061012c9190610603565b61039f565b005b5f61013c610423565b5f3373ffffffffffffffffffffffffffffffffffffffff1647604051610161906106b4565b5f6040518083038185875af1925050503d805f811461019b576040519150601f19603f3d011682016040523d82523d5f602084013e6101a0565b606091505b505090508091505090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6101f9610423565b6102025f6104aa565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f341161026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610722565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042101580156102bd57507f00000000000000000000000000000000000000000000000000000000000000004211155b6102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f39061078a565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034891906107d5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e346040516103959190610646565b60405180910390a2565b6103a7610423565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610417575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040e919061066e565b60405180910390fd5b610420816104aa565b50565b61042b61056b565b73ffffffffffffffffffffffffffffffffffffffff16610449610204565b73ffffffffffffffffffffffffffffffffffffffff16146104a85761046c61056b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049f919061066e565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8115159050919050565b61058681610572565b82525050565b5f60208201905061059f5f83018461057d565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105d2826105a9565b9050919050565b6105e2816105c8565b81146105ec575f5ffd5b50565b5f813590506105fd816105d9565b92915050565b5f60208284031215610618576106176105a5565b5b5f610625848285016105ef565b91505092915050565b5f819050919050565b6106408161062e565b82525050565b5f6020820190506106595f830184610637565b92915050565b610668816105c8565b82525050565b5f6020820190506106815f83018461065f565b92915050565b5f81905092915050565b50565b5f61069f5f83610687565b91506106aa82610691565b5f82019050919050565b5f6106be82610694565b9150819050919050565b5f82825260208201905092915050565b7f646f6e6174652076616c7565206d757374206772656174207468616e203000005f82015250565b5f61070c601e836106c8565b9150610717826106d8565b602082019050919050565b5f6020820190508181035f83015261073981610700565b9050919050565b7f74696d65206973206e6f7420616c6c6f776564000000000000000000000000005f82015250565b5f6107746013836106c8565b915061077f82610740565b602082019050919050565b5f6020820190508181035f8301526107a181610768565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107df8261062e565b91506107ea8361062e565b9250828201905080821115610802576108016107a8565b5b9291505056fea264697066735822122097b50db7705908c10bc5a8e70799cb5a54097ef99a215c847a5758c0a5ccf9d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI PUSH2 0x59 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x22B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x13C PUSH2 0x423 JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x161 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x202 PUSH0 PUSH2 0x4AA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264 SWAP1 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI POP PUSH32 0x0 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x423 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x417 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x4AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x56B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x449 PUSH2 0x204 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A8 JUMPI PUSH2 0x46C PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59F PUSH0 DUP4 ADD DUP5 PUSH2 0x57D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x5A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH2 0x62E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x659 PUSH0 DUP4 ADD DUP5 PUSH2 0x637 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x668 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH0 DUP4 ADD DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x69F PUSH0 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x6AA DUP3 PUSH2 0x691 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6BE DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x646F6E6174652076616C7565206D757374206772656174207468616E20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x70C PUSH1 0x1E DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x717 DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x739 DUP2 PUSH2 0x700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74696D65206973206E6F7420616C6C6F77656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x774 PUSH1 0x13 DUP4 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x77F DUP3 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7A1 DUP2 PUSH2 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7DF DUP3 PUSH2 0x62E JUMP JUMPDEST SWAP2 POP PUSH2 0x7EA DUP4 PUSH2 0x62E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x802 JUMPI PUSH2 0x801 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xB5 0xD 0xB7 PUSH17 0x5908C10BC5A8E70799CB5A54097EF99A21 TLOAD DUP5 PUSH27 0x5758C0A5CCF9D664736F6C634300081E0033000000000000000000 ",
							"sourceMap": "112:1091:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:171;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:309:2;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;848:171:2;893:4;1531:13:0;:11;:13::i;:::-;910:12:2::1;936:10;928:24;;960:21;928:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:77;;;1004:7;997:14;;;848:171:::0;:::o;1025:100::-;1079:7;1106;:11;1114:2;1106:11;;;;;;;;;;;;;;;;1099:18;;1025:100;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;531:309:2:-;604:1;593:9;:12;585:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;678:9;659:15;:28;;:58;;;;;710:7;691:15;:26;;659:58;651:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;776:9;752:7;:19;760:10;752:19;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;810:10;801:31;;;822:9;801:31;;;;;;:::i;:::-;;;;;;;;531:309::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:90:3:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:126;798:7;838:42;831:5;827:54;816:65;;761:126;;;:::o;893:96::-;930:7;959:24;977:5;959:24;:::i;:::-;948:35;;893:96;;;:::o;995:122::-;1068:24;1086:5;1068:24;:::i;:::-;1061:5;1058:35;1048:63;;1107:1;1104;1097:12;1048:63;995:122;:::o;1123:139::-;1169:5;1207:6;1194:20;1185:29;;1223:33;1250:5;1223:33;:::i;:::-;1123:139;;;;:::o;1268:329::-;1327:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:53;1572:7;1563:6;1552:9;1548:22;1527:53;:::i;:::-;1517:63;;1473:117;1268:329;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:147::-;2491:11;2528:3;2513:18;;2390:147;;;;:::o;2543:114::-;;:::o;2663:398::-;2822:3;2843:83;2924:1;2919:3;2843:83;:::i;:::-;2836:90;;2935:93;3024:3;2935:93;:::i;:::-;3053:1;3048:3;3044:11;3037:18;;2663:398;;;:::o;3067:379::-;3251:3;3273:147;3416:3;3273:147;:::i;:::-;3266:154;;3437:3;3430:10;;3067:379;;;:::o;3452:169::-;3536:11;3570:6;3565:3;3558:19;3610:4;3605:3;3601:14;3586:29;;3452:169;;;;:::o;3627:180::-;3767:32;3763:1;3755:6;3751:14;3744:56;3627:180;:::o;3813:366::-;3955:3;3976:67;4040:2;4035:3;3976:67;:::i;:::-;3969:74;;4052:93;4141:3;4052:93;:::i;:::-;4170:2;4165:3;4161:12;4154:19;;3813:366;;;:::o;4185:419::-;4351:4;4389:2;4378:9;4374:18;4366:26;;4438:9;4432:4;4428:20;4424:1;4413:9;4409:17;4402:47;4466:131;4592:4;4466:131;:::i;:::-;4458:139;;4185:419;;;:::o;4610:169::-;4750:21;4746:1;4738:6;4734:14;4727:45;4610:169;:::o;4785:366::-;4927:3;4948:67;5012:2;5007:3;4948:67;:::i;:::-;4941:74;;5024:93;5113:3;5024:93;:::i;:::-;5142:2;5137:3;5133:12;5126:19;;4785:366;;;:::o;5157:419::-;5323:4;5361:2;5350:9;5346:18;5338:26;;5410:9;5404:4;5400:20;5396:1;5385:9;5381:17;5374:47;5438:131;5564:4;5438:131;:::i;:::-;5430:139;;5157:419;;;:::o;5582:180::-;5630:77;5627:1;5620:88;5727:4;5724:1;5717:15;5751:4;5748:1;5741:15;5768:191;5808:3;5827:20;5845:1;5827:20;:::i;:::-;5822:25;;5861:20;5879:1;5861:20;:::i;:::-;5856:25;;5904:1;5901;5897:9;5890:16;;5925:3;5922:1;5919:10;5916:36;;;5932:18;;:::i;:::-;5916:36;5768:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "422000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "194",
								"donate()": "infinite",
								"getDonation(address)": "2829",
								"owner()": "2558",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 523,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 523,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 523,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 523,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 397,
									"end": 523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 419,
									"end": 429,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 454,
									"end": 469,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 442,
									"end": 469,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 442,
									"end": 469,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 442,
									"end": 469,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 442,
									"end": 469,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 442,
									"end": 469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 442,
									"end": 469,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 513,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3C"
								},
								{
									"begin": 332,
									"end": 333,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 502,
									"end": 515,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 502,
									"end": 515,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 490,
									"end": 499,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 499,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 490,
									"end": 515,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 490,
									"end": 515,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 480,
									"end": 515,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 593,
									"end": 670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 676,
									"end": 856,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 856,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 724,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 721,
									"end": 722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 802,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 821,
									"end": 825,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 811,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 845,
									"end": 849,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 850,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 902,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 943,
									"end": 944,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 925,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 925,
									"end": 945,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 925,
									"end": 945,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 920,
									"end": 945,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 920,
									"end": 945,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 959,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 977,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 959,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 959,
									"end": 979,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 959,
									"end": 979,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 979,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 954,
									"end": 979,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1007,
									"end": 1016,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1054,
									"end": 1065,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1036,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1066,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1066,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1215,
									"end": 1216,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1206,
									"end": 1213,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1217,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1196,
									"end": 1218,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1176,
									"end": 1177,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1178,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1232,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1126,
									"end": 1265,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1245,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1245,
									"end": 1263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1263,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1245,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1265,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1126,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1272,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1321,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1355,
									"end": 1356,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1337,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1337,
									"end": 1357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1337,
									"end": 1357,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1337,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1357,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1357,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1371,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1371,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1371,
									"end": 1391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1371,
									"end": 1391,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1371,
									"end": 1391,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1366,
									"end": 1391,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1366,
									"end": 1391,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1407,
									"end": 1416,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1400,
									"end": 1416,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1400,
									"end": 1416,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1435,
									"end": 1438,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1432,
									"end": 1433,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1439,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1462,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1426,
									"end": 1462,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1442,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1462,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1426,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "190"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "188"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 1203,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097b50db7705908c10bc5a8e70799cb5a54097ef99a215c847a5758c0a5ccf9d664736f6c634300081e0033",
									".code": [
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "ED88C68E"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 112,
											"end": 1203,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 848,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 848,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1025,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1025,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 531,
											"end": 840,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 531,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 531,
											"end": 840,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 531,
											"end": 840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 840,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 946,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 928,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 960,
											"end": 981,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 928,
											"end": 986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 909,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 909,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 909,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 848,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1117,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 840,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 531,
											"end": 840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 593,
											"end": 605,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 585,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 585,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 585,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 678,
											"end": 687,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 659,
											"end": 687,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 659,
											"end": 687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 659,
											"end": 717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 659,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 659,
											"end": 717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 710,
											"end": 717,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 691,
											"end": 706,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 717,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 691,
											"end": 717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 659,
											"end": 717,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 651,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 651,
											"end": 741,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 651,
											"end": 741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 776,
											"end": 785,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 771,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 752,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 752,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 752,
											"end": 785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 810,
											"end": 820,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E"
										},
										{
											"begin": 822,
											"end": 831,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 801,
											"end": 832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 801,
											"end": 832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 832,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 515,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 761,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 761,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 831,
											"end": 836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 827,
											"end": 881,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 816,
											"end": 881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 816,
											"end": 881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 761,
											"end": 887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 761,
											"end": 887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 761,
											"end": 887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 761,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 989,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 893,
											"end": 989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 930,
											"end": 937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 977,
											"end": 982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 959,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 959,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 959,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 959,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1117,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 995,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1068,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1048,
											"end": 1111,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1111,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1048,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1214,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1185,
											"end": 1214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1223,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1256,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1223,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1344,
											"end": 1463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1382,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1382,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1382,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1344,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1572,
											"end": 1579,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1527,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1527,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1954,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2663,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2843,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2926,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2843,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2935,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2935,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 3061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 3061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 3061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3067,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3273,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3420,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3273,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3430,
											"end": 3440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3430,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3614,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3615,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3807,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3627,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3799,
											"name": "PUSH",
											"source": 3,
											"value": "646F6E6174652076616C7565206D757374206772656174207468616E20300000"
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 4179,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3813,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 4035,
											"end": 4038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3976,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4043,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3976,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4141,
											"end": 4144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4052,
											"end": 4145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4145,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4052,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 4179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 4179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 4179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4604,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4185,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4424,
											"end": 4425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4402,
											"end": 4449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4466,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4597,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4466,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "74696D65206973206E6F7420616C6C6F77656400000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4785,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5012,
											"end": 5014,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5007,
											"end": 5010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4948,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5015,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4948,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5113,
											"end": 5116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5024,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5117,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5024,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5144,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 5151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 5151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5576,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5157,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5394,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5421,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5564,
											"end": 5568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5438,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5569,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5438,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5430,
											"end": 5569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5430,
											"end": 5569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5576,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5582,
											"end": 5762,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5582,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5630,
											"end": 5707,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5627,
											"end": 5628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5724,
											"end": 5725,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5755,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5756,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5827,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5861,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5856,
											"end": 5881,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5856,
											"end": 5881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5919,
											"end": 5929,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5916,
											"end": 5952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5932,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5952,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5916,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BeggingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"getDonation(address)": "410a1d32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aa\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BeggingContract.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"BeggingContract.sol\":{\"keccak256\":\"0x65be3cee83162867fe1403e7a0cc9f288b62f372dced1b1255e62d93078c9ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65ed586ec0ee66029a99d5b85dd80e91947ac64903da7e155008175cb9c42574\",\"dweb:/ipfs/QmVXLske4S6gVJkrN2oJRwRJXHuonUQQ1BahA9ux5pdiNF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "BeggingContract.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "BeggingContract.sol:BeggingContract",
								"label": "_donate",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"BeggingContract.sol": {
				"ast": {
					"absolutePath": "BeggingContract.sol",
					"exportedSymbols": {
						"BeggingContract": [
							308
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"140:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "140:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "140:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "121:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_donate",
									"nameLocation": "193:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "157:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "165:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "157:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "176:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "immutable",
									"name": "startTime",
									"nameLocation": "235:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "209:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "immutable",
									"name": "endTime",
									"nameLocation": "279:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "253:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 193,
									"mutability": "constant",
									"name": "_duration",
									"nameLocation": "320:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "295:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "295:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "332:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e",
									"id": 199,
									"name": "Donation",
									"nameLocation": "348:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "382:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "374:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:32:2"
									},
									"src": "342:47:2"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "431:92:2",
										"statements": [
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "442:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 207,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "454:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "460:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "454:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "442:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "442:27:2"
											},
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "490:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "502:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3630",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "513:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "502:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "490:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "480:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "480:35:2"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 202,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "419:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "423:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "419:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 204,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 201,
												"name": "Ownable",
												"nameLocations": [
													"411:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "411:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "411:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:0:2"
									},
									"scope": 308,
									"src": "397:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "564:276:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 224,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "593:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "597:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "593:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "604:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "593:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646f6e6174652076616c7565206d757374206772656174207468616e2030",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46",
																"typeString": "literal_string \"donate value must great than 0\""
															},
															"value": "donate value must great than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_670473bd345ad4bbf34b78156d2bada5cd089f1ce9c128dfd13eab0f245b7d46",
																"typeString": "literal_string \"donate value must great than 0\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "585:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "585:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 232,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "659:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "665:9:2",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "659:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 234,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "678:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "659:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 236,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "691:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "697:9:2",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "691:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 238,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "710:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "691:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "659:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74696d65206973206e6f7420616c6c6f776564",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "719:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295",
																"typeString": "literal_string \"time is not allowed\""
															},
															"value": "time is not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_110b6f4fb01e72b3370a7b93b2ae2f6401864efa5d899063e21cd0dc12559295",
																"typeString": "literal_string \"time is not allowed\""
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "651:90:2"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 244,
															"name": "_donate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "752:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 247,
														"indexExpression": {
															"expression": {
																"id": 245,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "760:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "764:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "760:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "752:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 248,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "776:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "780:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "776:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "752:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "752:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "810:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "814:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "810:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "822:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "826:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "822:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "Donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "801:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "EmitStatement",
												"src": "796:36:2"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "540:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:0:2"
									},
									"scope": 308,
									"src": "531:309:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "898:121:2",
										"statements": [
											{
												"assignments": [
													268,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "915:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "910:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 267,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "910:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 283,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "983:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 271,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "936:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "940:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "936:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "928:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "928:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "928:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "948:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "928:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 277,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "968:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BeggingContract_$308",
																				"typeString": "contract BeggingContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BeggingContract_$308",
																				"typeString": "contract BeggingContract"
																			}
																		],
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "960:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 275,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "960:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "960:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "974:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "960:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "928:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "909:77:2"
											},
											{
												"expression": {
													"id": 284,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "1004:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 266,
												"id": 285,
												"nodeType": "Return",
												"src": "997:14:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 262,
												"name": "onlyOwner",
												"nameLocations": [
													"875:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "875:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "875:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "857:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:6:2"
									},
									"scope": 308,
									"src": "848:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1088:37:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 294,
														"name": "_donate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1106:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 296,
													"indexExpression": {
														"id": 295,
														"name": "aa",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1114:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1106:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 293,
												"id": 297,
												"nodeType": "Return",
												"src": "1099:18:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "1034:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "aa",
												"nameLocation": "1054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:12:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1079:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:9:2"
									},
									"scope": 308,
									"src": "1025:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1160:3:2",
										"statements": []
									},
									"id": 303,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:2:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:0:2"
									},
									"scope": 308,
									"src": "1133:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1197:3:2",
										"statements": []
									},
									"id": 307,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:0:2"
									},
									"scope": 308,
									"src": "1169:31:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 309,
							"src": "112:1091:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								199
							]
						}
					],
					"src": "33:1170:2"
				},
				"id": 2
			}
		}
	}
}